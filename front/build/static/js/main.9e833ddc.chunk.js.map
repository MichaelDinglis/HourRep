{"version":3,"sources":["logos/croppedTrans.png","screens/createUser/createUser.js","redux/index.js","screens/dashboard/dashboard.js","screens/login/login.js","screens/error_noAccess/noAccess.js","routes/protectedRoute.js","screens/manageUsers/manageUsers.js","screens/reports/reports.js","screens/error_noAccess/err404.js","screens/customDate/customDate.js","screens/backup/backup.js","routes/routes.js","App.js","reportWebVitals.js","index.js"],"names":["require","config","CreateUser","useSelector","state","user","history","useHistory","useState","firstname","setFirstName","username","setUsername","password","setPassword","roles","setRoles","selectedRole","setSelectedRole","supervisorPass","setSupervisorPass","createDisabled","setCreateDisabled","dropdownIsLoading","setDropdownIsLoading","useEffect","Axios","get","process","then","responce","data","result","roleArray","map","role","value","label","checkMessage","alert","catch","e","console","log","JSON","stringify","message","className","src","logo","type","name","onChange","target","options","isLoading","placeholder","onClick","post","res","disabled","push","createStore","SET_USER","REMOVE_USER","removeUser","initialState","id","store","action","payload","withRouter","lastcheck","USER","comments","setComments","disableButtons","setDisablebuttons","lastCheckIn","replace","setLastCheckIn","dispatch","useDispatch","enableButtons","a","toUpperCase","Date","toISOString","slice","toLocaleTimeString","hour12","date","time","datetime","err","checkIn","timestampNow","Resp","ms","moment","diff","d","duration","totalHours","Math","floor","asHours","utc","format","checkOut","handleComments","setUser","NoAccess","style","height","width","fontSize","ProtectedRoute","isLogged","Component","component","isRestricted","acceptedRoles","rest","render","props","includes","ManageUsers","allUsers","setAllUsers","allSupervisors","setAllSupervisors","selectedUser","setSelectedUser","setAllRoles","setRolePassword","getSidenavUsers","passArray","showUser","User","index","Reports","startDate","setStartDate","endDate","setEndDate","setOptions","userSelection","setUserSelection","SelectionOptionsLoading","setSelectionOptionsLoading","reportOptions","setReportOptions","reportSelection","setReportSelection","buttonsDisabled","setButtonsDisabled","theOptions","val","isMulti","isSearchable","formatGroupLabel","display","overflow","whiteSpace","employees","popperPlacement","selected","dateFormat","maxDate","showYearDropdown","scrollableYearMonthDropdown","selectedUsers","formattedStart","formattedEnd","reportType","headers","getReport","Error404","CustomDate","Backup","Routes","path","Login","exact","Dashboard","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9e833ddc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/croppedTrans.794526d9.png\";","import React,{useState,useEffect}from 'react'\nimport'./createUser.css'\nimport Axios from 'axios'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router'\nimport { AiFillCaretLeft } from \"react-icons/ai\";\nimport  Select  from \"react-select\";\nimport logo from '../../logos/croppedTrans.png';\nrequire('dotenv').config()\n\n\n\nconst CreateUser =() => {\n    const USER = useSelector(state=>state)\n    const user=USER.user[0]\n    const history=useHistory()\n\n    const [firstname,setFirstName]=useState(\"\")\n    const [username,setUsername]=useState(\"\")\n    const [password,setPassword]=useState(\"\")\n    const [roles,setRoles]=useState()\n    const [selectedRole,setSelectedRole]=useState(\"\")\n    const [supervisorPass,setSupervisorPass]=useState(\"\")\n    const [createDisabled,setCreateDisabled]=useState(false)\n    const [dropdownIsLoading,setDropdownIsLoading]=useState(true)\n\n\n    useEffect(()=>{\n        Axios.get(process.env.REACT_APP_API+\"getroles\").then((responce)=>{\n            const data=responce.data.result\n            if(data){\n                const roleArray=data.map((role)=>{\n                return {value:role.role,label:role.role}\n                })\n                setRoles(roleArray)\n                setDropdownIsLoading(false)\n            }\n            if(data.checkMessage){\n                alert(data.checkMessage)\n            }\n        }).catch((e)=>{\n            console.log(e)\n            alert(JSON.stringify(e.message))\n            })\n    },[])\n\n    const handleChangeRole=(e)=>{\n        setSelectedRole(e)\n    }\n\n    const createButton=()=>{\n                setCreateDisabled(true)\n                Axios.post(process.env.REACT_APP_API+'newUser',{\n                    firstname:firstname,\n                    username:username,\n                    password:password,\n                    role:selectedRole.value,\n                    supervisorPass:supervisorPass\n                }).then((res)=>{\n                        if(res.data.checkMessage&& res.data.checkMessage!==\"User added sucessfully\"){\n                            alert(res.data.checkMessage)   \n                            setCreateDisabled(false)    \n                        }\n                        else if(res.data.checkMessage==\"User added sucessfully\"){\n                            alert(res.data.checkMessage)       \n                            setFirstName(\"\")\n                            setUsername(\"\")\n                            setPassword(\"\")\n                            setSelectedRole(\"\")\n                            setSupervisorPass(\"\")\n                            setCreateDisabled(false)   \n                        }\n                        else{\n                            setFirstName(\"\")\n                            setUsername(\"\")\n                            setPassword(\"\")\n                            setSelectedRole(\"\")\n                            setSupervisorPass(\"\")\n                            setCreateDisabled(false)   \n                        }\n                    }).catch((e)=>{\n                        console.log(e)\n                        alert(JSON.stringify(e.message))\n                        setCreateDisabled(false)\n                    })\n            }\n\n    const backToDash=()=>{\n        history.push('/dashboard')\n    }\n    return (\n        <div className=\"mainDiv\">\n            <div className=\"centerDiv\"> \n                <div className=\"createUserBox\">\n                <img src={logo} className='topLogoCreateUser'></img><br/>\n\n                   <p className=\"loginText\">Create User</p><br/>\n                   \n                    <span className=\"formText\">Full Name</span>\n                    \n                    <input className=\"formBox\"type=\"text\" name=\"Firstname\" onChange={(e)=>{setFirstName(e.target.value)}}value={firstname}></input>\n                    <br/>\n                    <span className=\"formText\">Username</span>\n                    <input className=\"formBox\" type=\"text\" name=\"username\" onChange={(e)=>{setUsername(e.target.value)}} value={username}></input><br/>\n                    <span className=\"formText\">Password</span>\n                    <input className=\"formBox\" type=\"password\" name=\"Password\" onChange={(e)=>{setPassword(e.target.value)}} value={password}></input>\n                    <br/>\n                    <span className=\"formText\">Role</span><br/>\n                        <div className='roleSelectionPosition'>\n                            <div className='roleSelectionClass'>\n                                <Select options={roles} onChange={handleChangeRole} value={selectedRole} isLoading={dropdownIsLoading} placeholder=\"Select Role!\"/>\n                            </div>\n                        </div>\n                         {selectedRole.value===\"supervisor\" && (\n                            <input className=\"formBox\" type=\"password\" placeholder=\"Supervisor Password:\" onChange={(e)=>{setSupervisorPass(e.target.value)}}/>\n                        )}\n                        \n                    <br/>\n                    <button onClick={createButton} className=\"loginButton\" disabled={createDisabled}><span className=\"loginButtText\">CREATE</span></button>\n                    <p>© Michael Dinglis All right Reserved</p>\n\n                    <br/>\n                    <AiFillCaretLeft onClick={backToDash} className=\"backButton\"></AiFillCaretLeft>\n                </div>\n            </div>\n        </div>\n    )\n}\nexport default CreateUser\n","const redux=require(\"redux\")\nconst createStore =redux.createStore\n\n\nconst SET_USER= \"SET_USER\"\nconst REMOVE_USER=\"REMOVE_USER\"\n\nfunction setUser(user){\n    return{\n        type:SET_USER,\n        payload:user\n    }\n}\n\nfunction removeUser(){\n    return{\n        type:REMOVE_USER\n    }\n}\nconst initialState={\n    user:[{id: 20, username: \"md\", password: 4, role: \"supervisor\", firstname: \"Michael Dinglis\"}]    ,\n\n}\n\n// [{id: 20, username: \"md\", password: 4, role: \"supervisor\", firstname: \"Michael Dinglis\"}]\n\nconst reducer=(state=initialState,action)=>{\n    switch(action.type){\n        case SET_USER:\n            return{\n                user:action.payload\n            }\n        case REMOVE_USER:\n            return{\n                user:null\n            }\n        default: return state\n    }\n}\n\nconst store=createStore(reducer)\n\nexport default store\nexport {setUser,removeUser}","import React,{useState} from 'react'\nimport './dashboard.css'\nimport {useSelector} from 'react-redux'\nimport Axios from 'axios'\nimport {useDispatch} from 'react-redux'\nimport {removeUser} from '../../redux/index'\nimport { useHistory } from \"react-router-dom\";\nimport moment from 'moment'\nimport { withRouter } from \"react-router-dom\";\nimport logo from '../../logos/croppedTrans.png';\nrequire('dotenv').config()\n\n\nfunction Dashboard() {\n    const USER=useSelector(state => state.user)\n    const [user,setUser]=useState(USER[0])\n    const [comments,setComments]=useState(\"\")\n    const [disableButtons,setDisablebuttons]=useState(false)\n\n    var lastcheck\n    if(USER[0].lastCheckIn!=null){\n        lastcheck=USER[0].lastCheckIn.replace('Z', '').replace('T', ' ');\n        }\n    const [lastCheckIn,setLastCheckIn]=useState(lastcheck)\n    const dispatch=useDispatch()\n    const history=useHistory()\n\n    const enableButtons=async()=>{\n        setDisablebuttons(false)\n    }\n\n    const checkIn=()=>{\n        setDisablebuttons(true)\n        if(lastCheckIn!= null){\n            alert(\"Please check out before checking in!\")\n            enableButtons()\n        }\n        else{\n            const date=new Date().toISOString().slice(0, 10)\n            const time=new Date().toLocaleTimeString('el-GR',{hour12:false})\n            const datetime= `${date} ${time}`\n            Axios.post(process.env.REACT_APP_API+\"checkInPost\",{\n                username:USER[0].username,\n                datetime:datetime\n            }).then((res)=>{\n                if(res.data.message==='Server error!'){\n                    alert(res.data.checkMessage)\n                    enableButtons()\n                }\n                else{\n                    alert(res.data.checkMessage)\n                    setComments(\"\")\n                    setLastCheckIn(res.data.lastCheckIn)\n                    enableButtons()\n                }\n\n            }).catch((err)=>{\n                console.log(err)\n                alert(`Error! ${err}`)\n                enableButtons()\n            })\n        }\n    }\n\n    const done=()=>{\n        history.push(\"/\")\n        dispatch(removeUser())\n    }\n\n    const checkOut=()=>{\n        setDisablebuttons(true)\n        const date=new Date().toISOString().slice(0, 10)\n        const time=new Date().toLocaleTimeString('el-GR',{hour12:false})\n        const timestampNow= `${date} ${time}`\n        Axios.get(`${process.env.REACT_APP_API}getCheckIn?username=${user.username}`).then((Resp)=>{\n            const data=Resp.data[0]\n            if(data.lastCheckIn===null){\n                alert(\"Please check in before checking out!\")\n                enableButtons()\n            }\n            else{\n                const checkIn=data.lastCheckIn.replace('Z', '').replace('T', ' ');\n                const ms=moment(timestampNow,\"YYYY/MM/DD HH:mm:ss\").diff(moment(checkIn,\"YYYY/MM/DD HH:mm:ss\"))\n                const d = moment.duration(ms);\n                const totalHours=Math.floor(d.asHours()) + moment.utc(ms).format(\".mm\");                \n                Axios.post(process.env.REACT_APP_API+'checkOut',{\n                    username:user.username,\n                    checkIn:checkIn,\n                    checkOut:timestampNow,\n                    totalHours:totalHours,\n                    comments:comments\n                    }).then((res)=>{\n                        if(res.data.checkMessage==='Server Error!'){\n                            alert(res.data.message)\n                            enableButtons()\n                        }\n                        else{\n                            alert(`${res.data.checkMessage}  Worktime: ${totalHours}`)\n                            setLastCheckIn(null)\n                            enableButtons()\n                        }                        \n                    }).catch((e)=>{\n                        console.log(e)\n                        alert(JSON.stringify(e.message))\n                        enableButtons()\n                })\n            }\n        }).catch((e)=>{\n            alert(JSON.stringify(e.message))\n            enableButtons()\n            console.log(e)\n        })\n    }\n\n    const handleComments=(e)=>{       \n            setComments(e.target.value)\n    }\n\n    const toManageUser=()=>{\n        history.push(\"/manageUsers\")\n    }\n\n    const toReports=()=>{\n        history.push(\"/reports\")\n    }\n\n    const toCreateUser=()=>{\n        history.push(\"/createUser\")\n    }\n\n    const toCustomAdd=()=>{\n        history.push(\"/customDate\")\n    }\n\n    const toBackup=()=>{\n        history.push(\"/backup\")\n    }\n    return (\n        <div className=\"mainDiv\">\n            <div>\n                {user.role!==\"employee\" && (<div className=\"sidenav\">\n                    <div className=\"menuName\">{user.role.toUpperCase()} MENU</div>\n                    <a onClick={toCreateUser}>Create User</a>\n                    <a onClick={toManageUser}>Manage Users</a>\n                    <a onClick={toCustomAdd}>Custom Date</a>\n                    <a onClick={toReports}>Reports</a>\n                    <a onClick={toBackup}>Backup</a>\n                </div>)}\n                <div className={user.role!==\"employee\" ? 'notCenterMain':'centerMain'}>\n                    <p className=\"welcomeTextDashboard\">\n                    <img src={logo} className='topLogoDash'></img><br/>\n                        Welcome, {user.firstname}<br/><br/>\n                        Last CheckIn: {lastCheckIn ? lastCheckIn : \"NULL\"}\n                    </p>\n                    <hr/>\n                        <p className='currentStats'>\n                            Current date: {new Date().toISOString().slice(0, 10)}<br/>\n                            Current time: {new Date().toLocaleTimeString('el-GR',{hour12:false})}\n                        </p>\n                        <button disabled={disableButtons} onClick={()=>{checkIn()}}id=\"in\" className=\"BUTTONS\" >Check In</button>\n                        <button disabled={disableButtons} onClick={()=>{checkOut()}}id=\"out\" className=\"BUTTONS\">Check Out</button>\n                        <br/>\n                        <input id=\"commentBox\" type=\"text\" name=\"comments\" value={comments} onChange={(e)=>{handleComments(e)}} placeholder=\"Checkout Comments\"/>\n                        <br/>\n                        <button onClick={()=>{done()}} id=\"dashboardDoneButton\">Done!</button><br/><br/>\n                        <p>© Michael Dinglis All right Reserved</p>\n                    </div>\n            </div>\n\n\n            \n        </div>\n        \n    )\n}\n\nexport default withRouter(Dashboard)\n\n\n{/* <div className='bottomStatDiv'>\nCurrent date: {new Date().toISOString().slice(0, 10)}<br/>\nCurrent time: {new Date().toLocaleTimeString('el-GR',{hour12:false})}\n</div> */}","import React,{useEffect, useState}from 'react'\nimport'./login.css'\nimport Axios from 'axios'\nimport { useHistory,withRouter } from \"react-router-dom\";\nimport {setUser,removeUser} from '../../redux/index.js'\nimport {useDispatch} from 'react-redux'\nimport logo from '../../logos/croppedTrans.png'\n\n\nrequire('dotenv').config()\n\nconst Login =() => {\n\n    const [username,setUsername]=useState(\"\")\n    const [password,setPassword]=useState(\"\")\n    const dispatch=useDispatch()\n    const history=useHistory()\n\n    useEffect(()=>{\n        dispatch(removeUser())\n    },[])\n\n    const loginButton=()=>{\n        Axios.post(process.env.REACT_APP_API+'login',{\n            username:username,\n            password:password\n        }).then((Resp)=>{\n            if(Resp.data.checkMessage){\n                alert(Resp.data.checkMessage)\n            }\n            else{\n                if(Resp.data[0]){\n                    const user=Resp.data\n                    dispatch(setUser(user))\n                    const dashboardPath=\"/dashboard\"\n                    history.push(dashboardPath)\n                }\n                else{\n                    alert(\"Whoops! Something went wrong. Please try again\")\n                }\n            }\n        }).catch((e)=>{\n            console.log(e)\n            alert(`Error! ${e.message}`)\n        })\n    }\n    return (\n        <div className=\"mainDiv\">\n            <div className=\"centerDiv\"> \n                <div className=\"loginBox\">\n                <img src={logo} className='topLogo'></img><br/>\n                <span className=\"loginText\">Login </span> <br/>\n                    <div className=\"inputs\">\n                        <span className=\"formText\">Username   </span>\n                        <input className=\"formBox\" type=\"text\" name=\"username\" onChange={(e)=>{setUsername(e.target.value)}}></input><br/>\n                        <span className=\"formText\">Password   </span>\n                        <input className=\"formBox\" type=\"password\" name=\"Password\" onChange={(e)=>{setPassword(e.target.value)}}></input>\n                        <br/>\n                        <button className=\"loginButton\" onClick={loginButton}><span className=\"loginButtText\">Login</span></button>\n                    </div>\n                    <p>© Michael Dinglis All right Reserved</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(Login)","import React from 'react'\nimport {MdOutlineSentimentDissatisfied} from 'react-icons/md'\nimport { useHistory } from \"react-router-dom\";\nimport logo from '../../logos/croppedTrans.png';\n\n\nexport default function NoAccess() {\n    const history=useHistory()\n\n    const backToHome=()=>{\n        history.push(\"/\")\n    }\n    return (\n        <div style={{height:'100%'}}>\n            <img src={logo} className='topLogoNoAccess'></img><br/>\n            <MdOutlineSentimentDissatisfied style={{width:'100px',height:'150px'}}></MdOutlineSentimentDissatisfied>\n            <p style={{fontSize:'22px'}}>You have no access to this page</p>\n            <button onClick={backToHome} className='backToHomeErrorPage'>Back to home</button>\n        </div>\n    )\n}\n","import React from 'react'\nimport {Route,Redirect} from 'react-router-dom'\nimport { useHistory } from \"react-router-dom\";\nimport NoAccess from '../screens/error_noAccess/noAccess';\n\nexport default function ProtectedRoute({isLogged:isLogged,component:Component,isRestricted:isRestricted,acceptedRoles:acceptedRoles, ...rest}) {\n    const history=useHistory()\n    let USER;\n    if(isLogged){\n        USER=isLogged[0]\n    }\n\n    return (\n        <Route {...rest} render={(props)=>{\n            if(isRestricted===false){\n                if(isLogged){\n                    return<Component/>\n                }\n                else{\n                    return<NoAccess/>\n                }}\n\n            else if(isRestricted===true){\n                if(isLogged){\n                    if(acceptedRoles.includes(USER.role)){\n                        return <Component/>\n                    }\n                    else{\n                        return<NoAccess/>\n                    }    \n                }\n                else{\n                    return<NoAccess/>\n                }\n            }\n        }}/>\n    )\n}\n","import Axios from 'axios'\nimport React, {useState,useEffect} from 'react'\nimport './manageUsers.css'\nimport {useSelector} from 'react-redux'\nimport { useHistory } from 'react-router'\nimport {useDispatch} from 'react-redux'\nimport {removeUser} from '../../redux/index'\nimport  Select  from \"react-select\";\nimport { BsTrash } from \"react-icons/bs\";\nimport { AiFillCaretLeft } from \"react-icons/ai\";\nimport logo from '../../logos/croppedTrans.png';\n\nrequire('dotenv').config()\n\nexport default function ManageUsers() {\n    const [allUsers,setAllUsers]=useState([])\n    const [allSupervisors,setAllSupervisors]=useState()\n    const [selectedUser,setSelectedUser]=useState()\n    const [firstname,setFirstName]=useState(\"\")\n    const [username,setUsername]=useState(\"\")\n    const [password,setPassword]=useState(\"\")\n    const [roles,setAllRoles]=useState()\n    const [selectedRole,setSelectedRole]=useState(\"\")\n    const [rolePassword,setRolePassword]=useState()\n    const [supervisorPass,setSupervisorPass]=useState(\"\")\n    const [dropdownIsLoading,setDropdownIsLoading]=useState(true)\n    const USER=useSelector(state => state.user[0])\n\n    const history=useHistory()\n    const dispatch=useDispatch()\n\n\n    useEffect(()=>{\n        getSidenavUsers()\n    },[])\n\n    const getSidenavUsers=()=>{\n        if(USER){\n            Axios.get(process.env.REACT_APP_API+\"getAllUsers\").then((res)=>{\n                if(res.data.checkMessage){\n                    alert(res.data.checkMessage)\n                }\n                else{\n                    setAllUsers(res.data[0])\n                    const roleArray=res.data[1].map((role)=>{\n                        return {value:role.role,label:role.role}\n                    })\n                    const passArray=res.data[1].map((role)=>{\n                        return role.password\n                    })\n                    setAllRoles(roleArray)\n                    setRolePassword(passArray)\n                    setDropdownIsLoading(false)\n                }\n            }).catch((e)=>{\n                console.log(e)\n                alert(e.message)\n            })\n            Axios.post(process.env.REACT_APP_API+\"getAllSupervisors\",{\n                username:USER.username\n            }).then((res)=>{\n                if(res.data.checkMessage){\n                    alert(res.data.checkMessage)\n                }\n                else{\n                    setAllSupervisors(res.data.result)}\n            }).catch((err)=>{\n                console.log(err)\n                alert(JSON.stringify(err.message))\n            })\n        }\n    }\n\n    const showUser=(User)=>{\n        setSelectedUser(User.username)\n        setFirstName(User.firstname)\n        setUsername(User.username)\n        setPassword(User.password)\n        setSelectedRole({value:User.role,label:User.role})\n    }\n\n    const handleChangeRole=(e)=>{\n        setSelectedRole(e)\n    }\n\n    const doneButton=()=>{\n        Axios.post(process.env.REACT_APP_API+\"updateUser\",{\n            selectedUser:selectedUser,\n            firstname:firstname,\n            username:username,\n            password:password,\n            role:selectedRole.value,\n            supervisorPass:supervisorPass,\n        }).then((res)=>{\n            alert(res.data.checkMessage)\n            setFirstName(\"\")\n            setUsername(\"\")\n            setPassword(\"\")\n            setSelectedUser(\"\")\n            setSupervisorPass(\"\")\n            getSidenavUsers()\n        }).catch((err)=>{\n            alert(JSON.stringify(err.message))\n            console.log(err)\n        })\n    }\n\n    const backToDash=()=>{\n        history.push('/dashboard')\n    }\n\n    return (\n        <div className=\"manageUserPage\">\n            <div className=\"sidenavUsers\">\n\n                <p>USERS</p>\n                {\n                    allUsers&&\n                    allUsers.map((user,index)=>(\n                        <span onClick={()=>{showUser(user)}} key={index}>{user.firstname}</span>\n                    ))\n                }\n                {USER.role===\"supervisor\" && <p>Supervisors</p>}\n                \n                {\n                    allSupervisors &&\n                        USER.role===\"supervisor\"&&\n                            allSupervisors.map((user,index)=>(\n                                <span onClick={()=>{showUser(user)}} key={index}>{user.firstname}</span>\n                            ))\n                }\n            </div>\n\n            <div className=\"beforeMain\">\n                <div className=\"main\">\n                <img src={logo} className='topLogoManage'></img><br/>\n\n                    <p>Manage Users</p>\n\n                    <form>\n                        <span className=\"manageUserFormText\">Firstname</span>\n                        <input className=\"formBox\"value={firstname} onChange={(e)=>{setFirstName(e.target.value)}}/><br/>\n                        <span className=\"managesSerFormText\">Username</span>\n                        <input className=\"formBox\"value={username} onChange={(e)=>{setUsername(e.target.value)}}/><br/>\n                        <span className=\"manageUserFormText\">Password</span>\n                        <input className=\"formBox\"value={password} onChange={(e)=>{setPassword(e.target.value)}}/><br/>\n                    </form>\n                    <span className=\"formTextManage\">Role</span><br/>\n                        <div className='roleSelectionPosition'>\n                            <div className='roleSelectionClass'>\n                                <Select options={roles} onChange={handleChangeRole} value={selectedRole} isLoading={dropdownIsLoading} placeholder=\"Select Role!\"/>\n                            </div>\n                        </div>\n\n\n                            \n                            {selectedRole.value===\"supervisor\" && (\n                                <input className=\"formBox\" value={supervisorPass}type=\"text\" placeholder=\"Supervisor Password:\" onChange={(e)=>{setSupervisorPass(e.target.value)}}/>\n                            )}\n                    <br/>\n                    <div className=\"manageUserDoneButton\">\n                    <button className='loginButton' onClick={()=>{doneButton()}}><span className='loginButtText'>SUBMIT</span></button><br/>\n\n                    <span className='trashInnerDiv'>\n                        <AiFillCaretLeft onClick={backToDash} className=\"backInManage\"></AiFillCaretLeft>\n                    </span>      \n\n\n                    </div>\n                    <p style={{fontSize:'12px'}}>© Michael Dinglis All right Reserved</p>\n\n                </div>\n\n            </div>\n\n        </div>\n    )\n}\n","import React,{useEffect, useState} from 'react'\nimport './reports.css'\nimport Axios from 'axios'\nimport  Select  from \"react-select\";\nimport DatePicker from 'react-datepicker';\nimport { useHistory } from 'react-router'\nimport { AiFillCaretLeft } from \"react-icons/ai\";\nimport {saveAs} from 'file-saver'\nimport logo from '../../logos/croppedTrans.png';\n\nexport default function Reports() {\n\n    const [startDate,setStartDate]=useState(null)\n    const [endDate,setEndDate]=useState(null)\n    const [options,setOptions]=useState()\n    const [userSelection,setUserSelection]=useState()\n    const [SelectionOptionsLoading,setSelectionOptionsLoading]=useState(true)\n    const [reportOptions,setReportOptions]=useState()\n    const [reportSelection,setReportSelection]=useState()\n    const [buttonsDisabled,setButtonsDisabled]=useState(false)\n    const history=useHistory()\n\n    useEffect(() => {\n        Axios.get(`${process.env.REACT_APP_API}getAllUsersForReports`).then((res)=>{\n            const data=res.data\n            if(data){\n                const theOptions=data.map((val)=>{\n                    return {value:val.username,label:val.firstname,role:val.role}\n                })\n                setOptions(theOptions)}\n            if(res.data.checkMessage){\n                alert(res.data.checkMessage)\n            }\n            }).catch((e)=>{\n                console.log(e)\n                alert(JSON.stringify(e.message))\n        })\n        setReportOptions([\n            {value:\"Detailed\",label:\"Detailed\"},\n            {value:\"Summary\",label:\"Summary\"}\n        ])\n    }, [])\n\n    useEffect(() => {\n        if(options){\n            setSelectionOptionsLoading(false)\n        }\n        else{\n            setSelectionOptionsLoading(true)\n        }\n    }, [options])\n\n    const getReport= ()=>{\n        setButtonsDisabled(true)\n        let selectedUsers\n        if(userSelection){\n            selectedUsers=userSelection.map((val)=>{\n            return val.value\n            })\n        }\n        if(startDate===null||endDate===null){\n            alert(\"Please Select Dates!\")\n            setButtonsDisabled(false)\n        }\n        else{\n            setButtonsDisabled(false)\n            const formattedStart=startDate.toISOString().slice(0, 10)\n            const formattedEnd=endDate.toISOString().slice(0, 10)\n            Axios.post(`${process.env.REACT_APP_API}giveReportParams`,{\n                reportType:reportSelection,\n                selectedUsers:selectedUsers,\n                startDate:formattedStart,\n                endDate:formattedEnd,\n            },\n            {\n                headers: {\"Access-Control-Allow-Origin\": \"*\"} \n            }\n            ).then((res)=>{\n                if(res.data.checkMessage===\"OK!\"){\n                    alert(\"Pdf Created!!\")}\n                else if(res.data.checkMessage){\n                    alert(res.data.checkMessage)}\n                    \n                        // Axios.get(`${process.env.REACT_APP_API}pdf`,{\n                        //     responseType:'blob'\n                        // }).then((response)=>{\n                        //     const pdfBlob=new Blob([response.data],{type:'application/pdf;charset=utf-8'})\n                        //     saveAs(pdfBlob,`${reportSelection.value}Report_StartDate:${formattedStart}.pdf`)\n                        //     setButtonsDisabled(false)\n                        // }).catch((e)=>{\n                        //     alert(JSON.stringify(\"Error: \"+e.message))\n                        //     console.log(e)\n                        //     setButtonsDisabled(false)\n                        // })\n            }).catch((e)=>{\n                console.log(e)\n                alert(JSON.stringify(e.message))\n                setButtonsDisabled(false)\n        })}\n\n    }\n\n    const handleUserMenuChange=(e)=>{\n        setUserSelection(e)\n    }\n\n    const selectAllButton=()=>{\n        setUserSelection(options)\n    }\n\n    const selectAllEmployees=()=>{\n        let employees=[];\n        if(options){\n            options.map((val)=>{\n                if(val.role===\"employee\"){\n                    employees.push({value:val.value,label:val.label,role:val.role})\n                }\n            })\n            setUserSelection(employees)\n        }\n    }   \n\n    const handleReportSelectionChange=(e)=>{\n        setReportSelection(e)\n    }\n\n    const backToDash=()=>{\n        history.push('/dashboard')\n    }\n\n    return (\n        <div className='mainDiv'>\n            <div className='centerDiv'>\n                <div className='reportBox'>\n                    <div className='regulationForReport'>\n                    <img src={logo} className='topLogoRep'></img><br/>\n                        <div className='loginText'>\n                            REPORTS\n                        </div>\n                        <div>\n\n                        <div className='roleSelectionPosition'>\n                                <div className='roleSelectionClass'>\n                                    <Select options={options} onChange={handleUserMenuChange} isMulti isSearchable isLoading={SelectionOptionsLoading} value={userSelection} formatGroupLabel=\"Users\"/>\n                                </div>\n                            </div>\n                                <span style={{    display: \"inline-block\",\n                                    overflow: \"hidden\",\n                                    whiteSpace: \"nowrap\"}}>\n                                    <button type=\"button\" onClick={selectAllButton} className='selectButoons'>Select All</button>\n                                    <button type=\"button\" onClick={selectAllEmployees} className='selectButoons'>Select All Employees</button>\n                                </span><br/>\n                                \n                        <span className=\"formText\">Start Date</span>\n                            <DatePicker \n                                popperPlacement=\"auto\"\n                                selected={startDate}\n                                onChange={date=>{setStartDate(date)}} \n                                dateFormat='yyyy/MM/dd'\n                                maxDate={new Date()}\n                                showYearDropdown\n                                scrollableYearMonthDropdown\n                                className='formBox'\n                                />\n                            <br/>\n                            <span className=\"formText\">End Date</span>\n                            <DatePicker \n                                popperPlacement=\"auto\"\n                                selected={endDate}\n                                onChange={date=>{setEndDate(date)}} \n                                dateFormat='yyyy/MM/dd'\n                                maxDate={new Date()}\n                                showYearDropdown\n                                scrollableYearMonthDropdown\n                                className='formBox'\n                                />\n\n\n                            <div className='roleSelectionPosition'>\n                                <div className='roleSelectionClass'>\n                                    <Select onChange={handleReportSelectionChange} isSearchable value={reportSelection} options={reportOptions}/>\n                                </div>\n                            </div>\n                            <button disabled={buttonsDisabled} onClick={()=>{getReport()}} className=\"loginButton\"><span className=\"loginButtText\">Get Report!</span></button>\n                            <p>© Michael Dinglis All right Reserved</p>\n\n                        </div>\n                    </div>\n                    <AiFillCaretLeft onClick={backToDash} className=\"backButton\"></AiFillCaretLeft>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport {MdOutlineSentimentVeryDissatisfied} from 'react-icons/md'\nimport { useHistory } from \"react-router-dom\";\nimport logo from '../../logos/croppedTrans.png';\n\n\n\nexport default function Error404() {\n    const history=useHistory()\n\n    const backToHome=()=>{\n        history.push(\"/\")\n    }\n    return (\n        <div>\n            <br/>\n            <img src={logo} className='topLogoError'></img><br/>\n            <MdOutlineSentimentVeryDissatisfied style={{width:'200px', height:'100px'}}></MdOutlineSentimentVeryDissatisfied><br></br>\n            <p style={{fontSize:'30px'}}>Error 404! Wrong Route!</p>\n            <button onClick={backToHome} className='backToHomeErrorPage'>Back to home</button>\n        </div>\n    )\n}\n","import React,{useEffect, useState} from 'react'\nimport './customDate.css'\nimport DatePicker from 'react-datepicker';\nimport  Select  from \"react-select\";\nimport Axios from 'axios'\nimport logo from '../../logos/croppedTrans.png';\n\n\nfunction CustomDate() {\n\n  const [options,setOptions]=useState(null)\n  const [userSelection,setUserSelection]=useState()\n\n  const handleUserMenuChange=(e)=>{\n    setUserSelection(e)\n  }\n\n  useEffect(() => {\n    Axios.get (`${process.env.REACT_APP_API}getAllUsersForReports`)\n    .then((res)=>{\n      const data=res.data\n      if(data){\n        const theOptions=data.map((val)=>{\n          return {value:val.username,label:val.firstname,role:val.role}\n        })\n        setOptions(theOptions)\n        console.log(theOptions)\n      }\n      if(res.data.checkMessage){\n        alert(res.data.checkMessage)\n      }\n    }).catch((e)=>{\n      console.log(e)\n      alert(JSON.stringify(e.message))\n    })\n  },[])\n\n  return (\n    <div className='mainDiv'>\n      <div className='centerDiv'>\n        <div className='customDateBox'>\n          <span className='topLogoSurroundingSpan'>\n                    <img className='topLogoBackup' src={logo}></img><br/>\n                </span>\n          <p>Custom date selection</p>\n          <br/>\n          <p>\n            Feature In Development. Please hold up :)\n          </p>\n          <br/>\n          <p>© Michael Dinglis All right Reserved</p>\n\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default CustomDate\n\n// {\n//   <div className='roleSelectionClass'>\n//   <Select options={options} isMulti={false} onChange={(e)=>{console.log(e);handleUserMenuChange(e)}} isSearchable value={userSelection}/>\n// </div>\n// }","import React from 'react'\nimport './backup.css'\nimport logo from '../../logos/croppedTrans.png';\nimport Axios from 'axios'\nimport { AiFillCaretLeft } from \"react-icons/ai\";\nimport { useHistory } from 'react-router'\nrequire('dotenv').config()\n\nfunction Backup() {\n\n    const history=useHistory()\n\n    const getBackup=()=>{\n        Axios.get(process.env.REACT_APP_API+\"backup\").then((res)=>{\n            alert(res.data.checkMessage)\n        }).catch((err)=>{\n            console.log(err)\n            alert(`Error! ${err}`)\n        })\n    }\n\n    const backToDash=()=>{\n        history.push('/dashboard')\n    }\n    \n\n  return (\n    <div className='mainDiv'>\n        <div className='centerDiv'>\n            <div className='customBackupBox'>\n                <span>\n                    <AiFillCaretLeft onClick={backToDash} className=\"backInManage\"></AiFillCaretLeft>\n                </span>   \n                <span className='topLogoSurroundingSpan'>\n                    <img className='topLogoBackup' src={logo}></img><br/>\n                </span>\n                <div>\n                    <p className='backupText'>Backup</p>\n                    <p className='backupParagraphText'>Please click the button bellow to create a database backup</p>\n                    <button className='backupButton' onClick={getBackup}>\n                        <span className='loginButtText'>Backup</span>\n                    </button>\n                </div>             \n                <p>© Michael Dinglis All right Reserved</p>\n\n            </div>\n        </div>\n    </div>\n  )\n}\n\nexport default Backup","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport CreateUser from '../screens/createUser/createUser';\nimport Dashboard from '../screens/dashboard/dashboard';\nimport Login from '../screens/login/login';\nimport ProtectedRoute from './protectedRoute';\nimport {useSelector} from 'react-redux'\nimport ManageUsers from '../screens/manageUsers/manageUsers';\nimport Reports from '../screens/reports/reports';\nimport Error404 from '../screens/error_noAccess/err404';\nimport CustomDate from '../screens/customDate/customDate';\nimport Backup from '../screens/backup/backup';\n\nfunction Routes(){\n    const USER=useSelector(state => state.user)\n    return(\n        <Router>\n            <Switch>\n                <Route path=\"/\" component={Login} exact/>        \n                <ProtectedRoute path=\"/createUser\" component={CreateUser} isLogged={USER} isRestricted={true} acceptedRoles={['manager','supervisor']}/>\n                <ProtectedRoute path=\"/dashboard\" component={Dashboard} isLogged={USER} isRestricted={false} acceptedRoles={['employee','manager','supervisor']}/>\n                <ProtectedRoute path=\"/manageUsers\" component={ManageUsers} isLogged={USER} isRestricted={true} acceptedRoles={['manager','supervisor']}/>\n                <ProtectedRoute path=\"/reports\" component={Reports} isLogged={USER} isRestricted={true} acceptedRoles={['manager','supervisor']}/>\n                <ProtectedRoute path=\"/customDate\" component={CustomDate} isLogged={USER} isRestricted={true} acceptedRoles={['manager','supervisor']}/>\n                <ProtectedRoute path=\"/backup\" component={Backup} isLogged={USER} isRestricted={true} acceptedRoles={['manager','supervisor']}/>\n                <Route path='/*' component={Error404}/>\n            </Switch>\n        </Router>\n)\n}\n\nexport default Routes","import './App.css';\nimport Routes from './routes/routes'\nimport {Provider} from 'react-redux'\nimport store from './redux/index'\nimport 'react-datepicker/dist/react-datepicker';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <div className=\"App\">\n        <Routes/>\n      </div>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  BrowserRouter as Router,} from 'react-router-dom'\nimport 'react-datepicker/dist/react-datepicker.css'\n\nReactDOM.render(\n  <Router>\n    <App />\n    </Router>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}